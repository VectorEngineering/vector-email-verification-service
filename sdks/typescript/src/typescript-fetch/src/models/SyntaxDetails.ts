/* tslint:disable */
/* eslint-disable */
/**
 * Reacher
 * ### What is Reacher?  Reacher is a robust, open-source email verification API service available as both a SaaS and self-hosted solution.
 *
 * The version of the OpenAPI document: 0.10.0
 * Contact: amaury@reacher.email
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Validation of the email address syntax.
 * @export
 * @interface SyntaxDetails
 */
export interface SyntaxDetails {
    /**
     * The domain part of the email address.
     * @type {string}
     * @memberof SyntaxDetails
     */
    domain: string;
    /**
     * Indicates if the email address syntax is valid.
     * @type {boolean}
     * @memberof SyntaxDetails
     */
    is_valid_syntax: boolean;
    /**
     * The username part of the email address.
     * @type {string}
     * @memberof SyntaxDetails
     */
    username: string;
}

/**
 * Check if a given object implements the SyntaxDetails interface.
 */
export function instanceOfSyntaxDetails(value: object): value is SyntaxDetails {
    if (!('domain' in value) || value['domain'] === undefined) return false;
    if (!('is_valid_syntax' in value) || value['is_valid_syntax'] === undefined) return false;
    if (!('username' in value) || value['username'] === undefined) return false;
    return true;
}

export function SyntaxDetailsFromJSON(json: any): SyntaxDetails {
    return SyntaxDetailsFromJSONTyped(json, false);
}

export function SyntaxDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): SyntaxDetails {
    if (json == null) {
        return json;
    }
    return {
        
        'domain': json['domain'],
        'is_valid_syntax': json['is_valid_syntax'],
        'username': json['username'],
    };
}

export function SyntaxDetailsToJSON(json: any): SyntaxDetails {
    return SyntaxDetailsToJSONTyped(json, false);
}

export function SyntaxDetailsToJSONTyped(value?: SyntaxDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'domain': value['domain'],
        'is_valid_syntax': value['is_valid_syntax'],
        'username': value['username'],
    };
}

