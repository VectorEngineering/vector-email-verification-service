/*
Reacher

### What is Reacher?  Reacher is a robust, open-source email verification API service available as both a SaaS and self-hosted solution.

API version: 0.10.0
Contact: amaury@reacher.email
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PostV1Bulk200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostV1Bulk200Response{}

// PostV1Bulk200Response struct for PostV1Bulk200Response
type PostV1Bulk200Response struct {
	// The unique ID generated for this bulk verification job. Use this `job_id` to query the progress or results of the bulk verification.
	JobId int32 `json:"job_id"`
}

type _PostV1Bulk200Response PostV1Bulk200Response

// NewPostV1Bulk200Response instantiates a new PostV1Bulk200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostV1Bulk200Response(jobId int32) *PostV1Bulk200Response {
	this := PostV1Bulk200Response{}
	this.JobId = jobId
	return &this
}

// NewPostV1Bulk200ResponseWithDefaults instantiates a new PostV1Bulk200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostV1Bulk200ResponseWithDefaults() *PostV1Bulk200Response {
	this := PostV1Bulk200Response{}
	return &this
}

// GetJobId returns the JobId field value
func (o *PostV1Bulk200Response) GetJobId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value
// and a boolean to check if the value has been set.
func (o *PostV1Bulk200Response) GetJobIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobId, true
}

// SetJobId sets field value
func (o *PostV1Bulk200Response) SetJobId(v int32) {
	o.JobId = v
}

func (o PostV1Bulk200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostV1Bulk200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["job_id"] = o.JobId
	return toSerialize, nil
}

func (o *PostV1Bulk200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"job_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostV1Bulk200Response := _PostV1Bulk200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostV1Bulk200Response)

	if err != nil {
		return err
	}

	*o = PostV1Bulk200Response(varPostV1Bulk200Response)

	return err
}

type NullablePostV1Bulk200Response struct {
	value *PostV1Bulk200Response
	isSet bool
}

func (v NullablePostV1Bulk200Response) Get() *PostV1Bulk200Response {
	return v.value
}

func (v *NullablePostV1Bulk200Response) Set(val *PostV1Bulk200Response) {
	v.value = val
	v.isSet = true
}

func (v NullablePostV1Bulk200Response) IsSet() bool {
	return v.isSet
}

func (v *NullablePostV1Bulk200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostV1Bulk200Response(val *PostV1Bulk200Response) *NullablePostV1Bulk200Response {
	return &NullablePostV1Bulk200Response{value: val, isSet: true}
}

func (v NullablePostV1Bulk200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostV1Bulk200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


