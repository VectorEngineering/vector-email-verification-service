/*
Reacher

### What is Reacher?  Reacher is a robust, open-source email verification API service available as both a SaaS and self-hosted solution.

API version: 0.10.0
Contact: amaury@reacher.email
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the GetV1Bulk200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetV1Bulk200Response{}

// GetV1Bulk200Response struct for GetV1Bulk200Response
type GetV1Bulk200Response struct {
	JobId int32 `json:"job_id"`
	// The date and time when the bulk verification job was created.
	CreatedAt time.Time `json:"created_at"`
	// If the bulk verification job is completed, the date and time when it was finished.
	FinishedAt *time.Time `json:"finished_at,omitempty"`
	// The number of emails to verify in the bulk verification job.
	TotalRecords int32 `json:"total_records"`
	// The number of emails that have been verified at the time of the query.
	TotalProcessed int32 `json:"total_processed"`
	Summary GetV1Bulk200ResponseSummary `json:"summary"`
	// The status of the job, either \"Running\" or \"Completed\".
	JobStatus string `json:"job_status"`
}

type _GetV1Bulk200Response GetV1Bulk200Response

// NewGetV1Bulk200Response instantiates a new GetV1Bulk200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetV1Bulk200Response(jobId int32, createdAt time.Time, totalRecords int32, totalProcessed int32, summary GetV1Bulk200ResponseSummary, jobStatus string) *GetV1Bulk200Response {
	this := GetV1Bulk200Response{}
	this.JobId = jobId
	this.CreatedAt = createdAt
	this.TotalRecords = totalRecords
	this.TotalProcessed = totalProcessed
	this.Summary = summary
	this.JobStatus = jobStatus
	return &this
}

// NewGetV1Bulk200ResponseWithDefaults instantiates a new GetV1Bulk200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetV1Bulk200ResponseWithDefaults() *GetV1Bulk200Response {
	this := GetV1Bulk200Response{}
	return &this
}

// GetJobId returns the JobId field value
func (o *GetV1Bulk200Response) GetJobId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value
// and a boolean to check if the value has been set.
func (o *GetV1Bulk200Response) GetJobIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobId, true
}

// SetJobId sets field value
func (o *GetV1Bulk200Response) SetJobId(v int32) {
	o.JobId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *GetV1Bulk200Response) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *GetV1Bulk200Response) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *GetV1Bulk200Response) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetFinishedAt returns the FinishedAt field value if set, zero value otherwise.
func (o *GetV1Bulk200Response) GetFinishedAt() time.Time {
	if o == nil || IsNil(o.FinishedAt) {
		var ret time.Time
		return ret
	}
	return *o.FinishedAt
}

// GetFinishedAtOk returns a tuple with the FinishedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetV1Bulk200Response) GetFinishedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.FinishedAt) {
		return nil, false
	}
	return o.FinishedAt, true
}

// HasFinishedAt returns a boolean if a field has been set.
func (o *GetV1Bulk200Response) HasFinishedAt() bool {
	if o != nil && !IsNil(o.FinishedAt) {
		return true
	}

	return false
}

// SetFinishedAt gets a reference to the given time.Time and assigns it to the FinishedAt field.
func (o *GetV1Bulk200Response) SetFinishedAt(v time.Time) {
	o.FinishedAt = &v
}

// GetTotalRecords returns the TotalRecords field value
func (o *GetV1Bulk200Response) GetTotalRecords() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalRecords
}

// GetTotalRecordsOk returns a tuple with the TotalRecords field value
// and a boolean to check if the value has been set.
func (o *GetV1Bulk200Response) GetTotalRecordsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalRecords, true
}

// SetTotalRecords sets field value
func (o *GetV1Bulk200Response) SetTotalRecords(v int32) {
	o.TotalRecords = v
}

// GetTotalProcessed returns the TotalProcessed field value
func (o *GetV1Bulk200Response) GetTotalProcessed() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalProcessed
}

// GetTotalProcessedOk returns a tuple with the TotalProcessed field value
// and a boolean to check if the value has been set.
func (o *GetV1Bulk200Response) GetTotalProcessedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalProcessed, true
}

// SetTotalProcessed sets field value
func (o *GetV1Bulk200Response) SetTotalProcessed(v int32) {
	o.TotalProcessed = v
}

// GetSummary returns the Summary field value
func (o *GetV1Bulk200Response) GetSummary() GetV1Bulk200ResponseSummary {
	if o == nil {
		var ret GetV1Bulk200ResponseSummary
		return ret
	}

	return o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value
// and a boolean to check if the value has been set.
func (o *GetV1Bulk200Response) GetSummaryOk() (*GetV1Bulk200ResponseSummary, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Summary, true
}

// SetSummary sets field value
func (o *GetV1Bulk200Response) SetSummary(v GetV1Bulk200ResponseSummary) {
	o.Summary = v
}

// GetJobStatus returns the JobStatus field value
func (o *GetV1Bulk200Response) GetJobStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JobStatus
}

// GetJobStatusOk returns a tuple with the JobStatus field value
// and a boolean to check if the value has been set.
func (o *GetV1Bulk200Response) GetJobStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobStatus, true
}

// SetJobStatus sets field value
func (o *GetV1Bulk200Response) SetJobStatus(v string) {
	o.JobStatus = v
}

func (o GetV1Bulk200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetV1Bulk200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["job_id"] = o.JobId
	toSerialize["created_at"] = o.CreatedAt
	if !IsNil(o.FinishedAt) {
		toSerialize["finished_at"] = o.FinishedAt
	}
	toSerialize["total_records"] = o.TotalRecords
	toSerialize["total_processed"] = o.TotalProcessed
	toSerialize["summary"] = o.Summary
	toSerialize["job_status"] = o.JobStatus
	return toSerialize, nil
}

func (o *GetV1Bulk200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"job_id",
		"created_at",
		"total_records",
		"total_processed",
		"summary",
		"job_status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetV1Bulk200Response := _GetV1Bulk200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetV1Bulk200Response)

	if err != nil {
		return err
	}

	*o = GetV1Bulk200Response(varGetV1Bulk200Response)

	return err
}

type NullableGetV1Bulk200Response struct {
	value *GetV1Bulk200Response
	isSet bool
}

func (v NullableGetV1Bulk200Response) Get() *GetV1Bulk200Response {
	return v.value
}

func (v *NullableGetV1Bulk200Response) Set(val *GetV1Bulk200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetV1Bulk200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetV1Bulk200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetV1Bulk200Response(val *GetV1Bulk200Response) *NullableGetV1Bulk200Response {
	return &NullableGetV1Bulk200Response{value: val, isSet: true}
}

func (v NullableGetV1Bulk200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetV1Bulk200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


