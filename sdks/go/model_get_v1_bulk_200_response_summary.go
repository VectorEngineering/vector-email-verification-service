/*
Reacher

### What is Reacher?  Reacher is a robust, open-source email verification API service available as both a SaaS and self-hosted solution.

API version: 0.10.0
Contact: amaury@reacher.email
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetV1Bulk200ResponseSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetV1Bulk200ResponseSummary{}

// GetV1Bulk200ResponseSummary A summary of the processed emails.
type GetV1Bulk200ResponseSummary struct {
	// The number of emails where `is_reachable` is \"safe\".
	TotalSafe int32 `json:"total_safe"`
	// The number of emails where `is_reachable` is \"invalid\".
	TotalInvalid int32 `json:"total_invalid"`
	// The number of emails where `is_reachable` is \"risky\".
	TotalRisky int32 `json:"total_risky"`
	// The number of emails where `is_reachable` is \"unknown\".
	TotalUnknown int32 `json:"total_unknown"`
}

type _GetV1Bulk200ResponseSummary GetV1Bulk200ResponseSummary

// NewGetV1Bulk200ResponseSummary instantiates a new GetV1Bulk200ResponseSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetV1Bulk200ResponseSummary(totalSafe int32, totalInvalid int32, totalRisky int32, totalUnknown int32) *GetV1Bulk200ResponseSummary {
	this := GetV1Bulk200ResponseSummary{}
	this.TotalSafe = totalSafe
	this.TotalInvalid = totalInvalid
	this.TotalRisky = totalRisky
	this.TotalUnknown = totalUnknown
	return &this
}

// NewGetV1Bulk200ResponseSummaryWithDefaults instantiates a new GetV1Bulk200ResponseSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetV1Bulk200ResponseSummaryWithDefaults() *GetV1Bulk200ResponseSummary {
	this := GetV1Bulk200ResponseSummary{}
	return &this
}

// GetTotalSafe returns the TotalSafe field value
func (o *GetV1Bulk200ResponseSummary) GetTotalSafe() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalSafe
}

// GetTotalSafeOk returns a tuple with the TotalSafe field value
// and a boolean to check if the value has been set.
func (o *GetV1Bulk200ResponseSummary) GetTotalSafeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalSafe, true
}

// SetTotalSafe sets field value
func (o *GetV1Bulk200ResponseSummary) SetTotalSafe(v int32) {
	o.TotalSafe = v
}

// GetTotalInvalid returns the TotalInvalid field value
func (o *GetV1Bulk200ResponseSummary) GetTotalInvalid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalInvalid
}

// GetTotalInvalidOk returns a tuple with the TotalInvalid field value
// and a boolean to check if the value has been set.
func (o *GetV1Bulk200ResponseSummary) GetTotalInvalidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalInvalid, true
}

// SetTotalInvalid sets field value
func (o *GetV1Bulk200ResponseSummary) SetTotalInvalid(v int32) {
	o.TotalInvalid = v
}

// GetTotalRisky returns the TotalRisky field value
func (o *GetV1Bulk200ResponseSummary) GetTotalRisky() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalRisky
}

// GetTotalRiskyOk returns a tuple with the TotalRisky field value
// and a boolean to check if the value has been set.
func (o *GetV1Bulk200ResponseSummary) GetTotalRiskyOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalRisky, true
}

// SetTotalRisky sets field value
func (o *GetV1Bulk200ResponseSummary) SetTotalRisky(v int32) {
	o.TotalRisky = v
}

// GetTotalUnknown returns the TotalUnknown field value
func (o *GetV1Bulk200ResponseSummary) GetTotalUnknown() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalUnknown
}

// GetTotalUnknownOk returns a tuple with the TotalUnknown field value
// and a boolean to check if the value has been set.
func (o *GetV1Bulk200ResponseSummary) GetTotalUnknownOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalUnknown, true
}

// SetTotalUnknown sets field value
func (o *GetV1Bulk200ResponseSummary) SetTotalUnknown(v int32) {
	o.TotalUnknown = v
}

func (o GetV1Bulk200ResponseSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetV1Bulk200ResponseSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["total_safe"] = o.TotalSafe
	toSerialize["total_invalid"] = o.TotalInvalid
	toSerialize["total_risky"] = o.TotalRisky
	toSerialize["total_unknown"] = o.TotalUnknown
	return toSerialize, nil
}

func (o *GetV1Bulk200ResponseSummary) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"total_safe",
		"total_invalid",
		"total_risky",
		"total_unknown",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetV1Bulk200ResponseSummary := _GetV1Bulk200ResponseSummary{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetV1Bulk200ResponseSummary)

	if err != nil {
		return err
	}

	*o = GetV1Bulk200ResponseSummary(varGetV1Bulk200ResponseSummary)

	return err
}

type NullableGetV1Bulk200ResponseSummary struct {
	value *GetV1Bulk200ResponseSummary
	isSet bool
}

func (v NullableGetV1Bulk200ResponseSummary) Get() *GetV1Bulk200ResponseSummary {
	return v.value
}

func (v *NullableGetV1Bulk200ResponseSummary) Set(val *GetV1Bulk200ResponseSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableGetV1Bulk200ResponseSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableGetV1Bulk200ResponseSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetV1Bulk200ResponseSummary(val *GetV1Bulk200ResponseSummary) *NullableGetV1Bulk200ResponseSummary {
	return &NullableGetV1Bulk200ResponseSummary{value: val, isSet: true}
}

func (v NullableGetV1Bulk200ResponseSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetV1Bulk200ResponseSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


