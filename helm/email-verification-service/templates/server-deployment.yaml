{{- if .Values.server.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "email-verification-service.fullname" . }}-server
  labels:
    {{- include "email-verification-service.labels" . | nindent 4 }}
    component: server
spec:
  replicas: {{ .Values.server.replicaCount }}
  selector:
    matchLabels:
      {{- include "email-verification-service.selectorLabels" . | nindent 6 }}
      component: server
  template:
    metadata:
      labels:
        {{- include "email-verification-service.selectorLabels" . | nindent 8 }}
        component: server
    spec:
      serviceAccountName: {{ include "email-verification-service.serviceAccountName" . }}
      containers:
        - name: server
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.server.port }}
              protocol: TCP
          env:
            {{- range $key, $value := .Values.server.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            # PostgreSQL configuration
            - name: RCH__STORAGE__POSTGRES__DB_URL
              {{- if .Values.database.external }}
              value: {{ .Values.database.dsn | quote }}
              {{- else if .Values.database.existingSecret }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.existingSecret }}
                  key: {{ .Values.database.existingSecretKey }}
              {{- else }}
              value: "postgres://{{ .Values.postgresql.auth.username }}:{{ .Values.postgresql.auth.password }}@{{ .Release.Name }}-postgresql:{{ .Values.postgresql.service.port }}/{{ .Values.postgresql.auth.database }}"
              {{- end }}
            # RabbitMQ configuration
            - name: RCH__WORKER__RABBITMQ__URL
              {{- if .Values.messageQueue.external }}
              value: {{ .Values.messageQueue.dsn | quote }}
              {{- else if .Values.messageQueue.existingSecret }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.messageQueue.existingSecret }}
                  key: {{ .Values.messageQueue.existingSecretKey }}
              {{- else }}
              value: "amqp://{{ .Values.rabbitmq.auth.username }}:{{ .Values.rabbitmq.auth.password }}@{{ .Release.Name }}-rabbitmq:{{ .Values.rabbitmq.service.port }}"
              {{- end }}
          resources:
            {{- toYaml .Values.server.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
{{- end }}
