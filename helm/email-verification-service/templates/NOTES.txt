Thank you for installing {{ .Chart.Name }}.

Your release is named {{ .Release.Name }}.

To learn more about the release, try:

  $ helm status {{ .Release.Name }}
  $ helm get all {{ .Release.Name }}

{{- if .Values.server.enabled }}
To get the URL for the server:
{{- if contains "NodePort" $.Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ $.Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "email-verification-service.fullname" . }}-server)
  export NODE_IP=$(kubectl get nodes --namespace {{ $.Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" $.Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ $.Release.Namespace }} svc -w {{ include "email-verification-service.fullname" . }}-server'
  export SERVICE_IP=$(kubectl get svc --namespace {{ $.Release.Namespace }} {{ include "email-verification-service.fullname" . }}-server --template "{{ "{{ range (index .status.loadBalancer.ingress 0) }}{{ . }}{{ end }}" }}")
  echo http://$SERVICE_IP:{{ .Values.server.port }}
{{- else if contains "ClusterIP" $.Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ $.Release.Namespace }} -l "app.kubernetes.io/name={{ include "email-verification-service.name" . }},app.kubernetes.io/instance={{ .Release.Name }},component=server" -o jsonpath="{.items[0].metadata.name}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ $.Release.Namespace }} port-forward $POD_NAME 8080:{{ .Values.server.port }}
{{- end }}
{{- end }}

{{- if .Values.workers.enabled }}
{{- range $worker, $config := .Values.workers.instances }}
{{- if $config.enabled }}
To get the URL for {{ $config.name }}:
{{- if contains "NodePort" $.Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ $.Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ $config.name }})
  export NODE_IP=$(kubectl get nodes --namespace {{ $.Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" $.Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ $.Release.Namespace }} svc -w {{ $config.name }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ $.Release.Namespace }} {{ $config.name }} --template "{{ "{{ range (index .status.loadBalancer.ingress 0) }}{{ . }}{{ end }}" }}")
  echo http://$SERVICE_IP:{{ $config.port }}
{{- else if contains "ClusterIP" $.Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ $.Release.Namespace }} -l "app.kubernetes.io/name={{ include "email-verification-service.name" $ }},app.kubernetes.io/instance={{ $.Release.Name }},component=worker,worker={{ $config.name }}" -o jsonpath="{.items[0].metadata.name}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ $.Release.Namespace }} port-forward $POD_NAME 8080:{{ $config.port }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}

{{- if and .Values.rabbitmq.enabled (not .Values.messageQueue.external) }}
RabbitMQ Management Console can be accessed at:
  echo "URL : http://{{ .Release.Name }}-rabbitmq:{{ .Values.rabbitmq.service.managerPort }}"
  Username: {{ .Values.rabbitmq.auth.username }}
  Password: {{ .Values.rabbitmq.auth.password }}
{{- end }}

{{- if and .Values.postgresql.enabled (not .Values.database.external) }}
PostgreSQL can be accessed at:
  Host: {{ .Release.Name }}-postgresql:{{ .Values.postgresql.service.port }}
  Database: {{ .Values.postgresql.auth.database }}
  Username: {{ .Values.postgresql.auth.username }}
{{- end }}
